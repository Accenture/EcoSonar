{
  "viewport": {
    "title": "Has a Viewport meta tag",
    "description": "Lighthouse flags pages without a viewport meta tag.",
    "correction": "<div class='correction-text'>The Viewport meta tag enables responsive design, which means the web page adapts and scales appropriately to fit different screen sizes, including smartphones, tablets, laptops, and desktop computers. Responsive design ensures that users don't need to zoom in or scroll horizontally to view content, resulting in a smoother user experience and reduced frustration..A `< meta name=\"viewport\" >` not only optimizes your app for mobile screen sizes, but also prevents a 300 millisecond delay to user input.<br><br>Government Regulation:<br><a target='_blank' href='https://ecoresponsable.numerique.gouv.fr/publications/referentiel-general-ecoconception/critere/1.6/'>RGESN 1.6 : Does the digital service adapt to different types of terminals display ?</a><br><br> See :<br><a target='_blank' href='https://web.dev/viewport/'>Does not have a < meta name=\"viewport\" > tag with width or initial-scale</a><br><a target='_blank' href='https://developer.mozilla.org/en-US/docs/Web/HTML/Viewport_meta_tag'>Viewport meta tag</a><br><a target='_blank' href='https://gtmetrix.com/use-a-meta-tag-with-width-or-initial-scale.html'>Lighthouse: Use a < meta name=\"viewport\" > tag with width or initial-scale</a></div>",
    "titleData": "have missing `<meta name=\"viewport\">` tag",
    "titleDataSuccess": "have viewport meta tag"
  },
  "serverResponseTime": {
    "title": "Initial server response time was short",
    "description": "This audit fails when the browser waits more than 600 ms for the server to respond to the main document request.",
    "correction": "<div class='correction-text'>Keep the server response time for the main document short because all other requests depend on it.  <br> When a server responds quickly to user requests, it processes and delivers the requested web page or data more efficiently. A shorter response time means less time spent on data processing, which translates to lower energy consumption on the server-side. This is particularly important for websites with high traffic, as reducing the energy usage of servers can have a significant impact on overall carbon emissions associated with data centers and web hosting.<br><br>Government Regulation:<br><a target='_blank' href='https://ecoresponsable.numerique.gouv.fr/publications/referentiel-general-ecoconception/critere/6.3/'>RGESN 6.3 : Does the digital service use caching mechanisms for all transferred content under its control?</a><br><a target='_blank' href='https://ecoresponsable.numerique.gouv.fr/publications/referentiel-general-ecoconception/critere/7.1/'>RGESN 7.1 : Does the digital service use a server caching system for the most used data?</a><br><br> See :<br><a target='_blank' href='https://web.dev/time-to-first-byte/'>Reduce server response times (TTFB) </a><br><a target='_blank' href='https://gtmetrix.com/reduce-initial-server-response-time.html'>Lighthouse: Reduce initial server response time</a><br><a target='_blank' href='https://phoenixnap.com/kb/reduce-server-response-time'>7 Ways to Reduce Server Response Time</a> <br><a target='_blank' href='https://datadome.co/learning-center/how-to-reduce-server-response-time/'>8 Ways to Effectively Reduce Server Response Time</a></div>",
    "titleData": "Root document took {0}ms on average"
  },
  "mainthreadWorkBreakdown": {
    "title": "Minimize main-thread work",
    "description": "Lighthouse flags pages that keep the main thread busy for longer than 4 seconds during load.",
    "correction": "<div class='correction-text'>The main thread is responsible for executing JavaScript and rendering web content in a web browser. When designers and developers focus on reducing main-thread work, they achieve the following benefits:<br><br> 1.Energy Efficiency: Main-thread work requires the device's CPU to process JavaScript and render the web page. By minimizing the amount of work done on the main thread, web applications become more energy-efficient. This is especially important for mobile devices and laptops with limited battery life, as reducing CPU usage directly translates to longer battery life and reduced energy consumption.<br><br>2.Faster Page Load Times: When the main thread is not overwhelmed with excessive work, web pages load more quickly. Faster page load times lead to a better user experience, reduced bounce rates, and increased user engagement. Additionally, faster loading pages consume less network bandwidth, contributing to lower data transmission and reduced energy consumption.<br><br>Government Regulation:<br><a target='_blank' href='https://ecoresponsable.numerique.gouv.fr/publications/referentiel-general-ecoconception/critere/6.8/'>RGESN 6.8 : Does the digital service avoid triggering the loading of unused assets and content for each feature? </a><br><br> See :<br><a target='_blank' href='https://web.dev/mainthread-work-breakdown/'>Minimize main thread work</a><br><a target='_blank' href='https://gtmetrix.com/minimize-main-thread-work.html'>Lighthouse: Minimize main-thread work</a><br><a target='_blank' href='https://touch.marfeel.com/resources/blog/how-do-i-minimize-main-thread-work'>How do I minimize main thread work?</a> <br><a target='_blank' href='https://aatifbandey.medium.com/reduce-main-thread-work-in-react-component-a90c9bc1d9b3'>How to minimize main thread work in React Component</a></div>",
    "titleData": "{0}s on average"
  },
  "bootupTime": {
    "title": "Reduce JavaScript execution time",
    "description": "Lighthouse shows a warning when JavaScript execution takes longer than 2 seconds. The audit fails when execution takes longer than 3.5 seconds.",
    "correction": "<div class='correction-text'>JavaScript execution requires the device's CPU to process complex operations, which consumes energy. By reducing the execution time of JavaScript code, web applications become more energy-efficient, leading to lower power consumption and reduced carbon emissions associated with energy generation. <br>JavaScript execution time directly affects how quickly web pages load and become interactive. Optimizing JavaScript code helps minimize loading times, leading to a better user experience and reduced data usage. Faster page load times also contribute to lower data transmission, benefiting users with limited data plans and reducing the environmental impact of data transfer.<br><br>Government Regulation:<br><a target='_blank' href='https://ecoresponsable.numerique.gouv.fr/publications/referentiel-general-ecoconception/critere/6.8/)'>RGESN 6.8 : Does the digital service avoid triggering the loading of unused assets and content for each feature? </a><br><br> See :<br><a target='_blank' href='https://web.dev/bootup-time/'>Reduce JavaScript execution time</a><br><a target='_blank' href='https://gtmetrix.com/reduce-javascript-execution-time.html'>Lighthouse: Reduce JavaScript execution time</a><br><a target='_blank' href='https://wp-rocket.me/google-core-web-vitals-wordpress/reduce-javascript-execution-time/'>How to Reduce Javascript Execution Time</a> <br><a target='_blank' href='https://touch.marfeel.com/resources/blog/reduce-script-evaluation-time'>Reduce script evaluation time in 4 steps</a> </div>",
    "titleData": "{0}s on average"
  },
  "fontDisplay": {
    "title": "Ensure text remains visible during webfont load",
    "description": "Lighthouse flags any font URLs that may flash invisible text.",
    "correction": "<div class='correction-text'>Fallback fonts are typically standard system fonts that are readily available on users' devices. By ensuring text remains visible during webfont loading, designers prioritize accessibility for all users, including those with slower internet connections or devices that might take longer to load custom fonts. This ensures that the content remains legible and usable for everyone, regardless of their access to the webfonts.<br><br>    Leverage the font-display CSS feature to ensure text is user-visible while webfonts are loading. <br><br> See :<br><a target='_blank' href='https://web.dev/font-display/'>Ensure text remains visible during webfont load</a><br><a target='_blank' href='https://gtmetrix.com/ensure-text-remains-visible-during-webfont-load.html'>Lighthouse: Ensure text remains visible during webfont load</a><br><a target='_blank' href='https://wp-rocket.me/google-core-web-vitals-wordpress/ensure-text-remains-visible-webfont-load/'>How to Ensure Text Remains Visible During Webfont Load</a> </div>",
    "titleData": "text are invisible during one of pages load",
    "titleDataSuccess": "no text are invisible"
  },
  "thirdPartySummary": {
    "title": "Minimize third-party usage",
    "description": "Reduce the presence of third-party code.",
    "correction": "<div class='correction-text'>Third-party code can significantly impact load performance. Limit the number of redundant third-party providers and try to load third-party code after your page has primarily finished loading. <br>While some third-party services can be beneficial, reducing their usage offers several advantages from an ecodesign perspective: <br><br>1.Reduced Data Transfer: Third-party services often require additional data transfers between the user's device and external servers. Minimizing third-party usage means fewer requests to external servers, leading to reduced data transmission. This can help conserve bandwidth and lower the energy consumption associated with data transfer, particularly for users with limited data plans. <br><br>2.Improved Page Load Times: Third-party scripts and services can add extra weight to web pages, leading to slower loading times. By minimizing their usage, web pages become lighter and load more quickly, resulting in a better user experience and lower energy consumption. <br><br>3.Lower Server Load: Third-party services often rely on external servers to process data and deliver content. By reducing their usage, web servers experience less strain, leading to lower energy consumption in data centers and a reduced carbon footprint. <br><br>4.Enhanced Privacy and Security: Some third-party services may collect user data for tracking and advertising purposes, potentially compromising user privacy. Minimizing third-party usage can help protect user data and improve online security. <br><br>Government Regulation;<br><a target='_blank' href='https://ecoresponsable.numerique.gouv.fr/publications/referentiel-general-ecoconception/critere/4.5/'>RGESN 4.5 : Does the digital service allow users to decide on the activation of a third-party service?</a><br><br> Best practices n°82 from '115 bonnes pratiques d'écoconception web v4'<br><br> See :<br><a target='_blank' href='https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/loading-third-party-javascript/'>Loading Third-Party JavaScript</a><br><a target='_blank' href='https://gtmetrix.com/reduce-the-impact-of-third-party-code.html'>Lighthouse: Reduce the impact of third-party code</a><br><a target='_blank' href='https://nitropack.io/blog/post/reduce-the-impact-of-third-party-code'>Reduce the Impact of Third-Party Code </a> </div>",
    "titleData": "Third-party code blocked the main thread for {0}ms on average"
  },
  "thirdPartyFacades": {
    "title": "Some third-party resources can be lazy loaded with a facade",
    "description": "Some third-party embeds can be lazy loaded. Consider replacing them with a facade until they are required.",
    "correction": "<div class='correction-text'> Lazy loading refers to the practice of deferring the loading of non-essential resources until they are actually needed, while a facade is a simplified interface that acts as a placeholder for the actual resource. Some third-party embeds can be lazy loaded. Consider replacing them with a facade until they are required.Lazy loading ensures that resources are only loaded when they are actually needed, reducing unnecessary resource usage. This includes network resources, server processing, and client-side rendering, leading to improved resource efficiency.<br><br>Government Regulation:<br><a target='_blank' href='https://ecoresponsable.numerique.gouv.fr/publications/referentiel-general-ecoconception/critere/6.8/'>RGESN 6.8 : Does the digital service avoid triggering the loading of unused assets and content for each feature?</a><br><br> See :<br><a target='_blank' href='https://web.dev/third-party-facades/'>Lazy load third-party resources with facades</a><br><a target='_blank' href='https://gtmetrix.com/lazy-load-third-party-resources-with-facades.html#:~:text=Lazy%20loading%20your%20third-party,user%20interacts%20with%20the%20facade.'>Lighthouse: Lazy load third-party resources with facades</a><br><a target='_blank' href='https://docs.wp-rocket.me/article/1458-lazy-load-third-party-resources-with-facades'>Lazy load third-party resources with facades</a> </div>",
    "titleData": "{0} facade alternative(s) available"
  },
  "lcpLazyLoaded": {
    "title": "Don't lazy load Largest Contentful Paint image",
    "description": "Above-the-fold images that are lazily loaded render later in the page lifecycle, which can delay the largest contentful paint.",
    "correction": "<div class='correction-text'>Lazy-loading is a technique to defer downloading a resource until it's needed, which conserves data and reduces network contention for critical assets. It became a web standard in 2019 and today loading='lazy' for images is supported by most major browsers. That sounds great, but is there such a thing as too much lazy loading? What we found is that lazy-loading can be an amazingly effective tool for reducing unneeded image bytes, but overuse can negatively affect performance. Concretely, our analysis shows that more eagerly loading images within the initial viewport—while liberally lazy-loading the rest—can give us the best of both worlds: fewer bytes loaded and improved Core Web Vitals. <br>The LCP image is usually the most significant visual element on a page, such as a hero image or a central part of the content. Users expect to see this image immediately when the page loads, and delaying its loading through lazy loading could negatively impact user experience. Prioritizing a smooth and complete visual experience is essential for retaining users and ensuring a positive engagement. The LCP image often provides context and understanding of the web page's content. If the image is delayed through lazy loading, users might not fully comprehend the page's purpose or message until the image loads. This can result in confusion and frustration, potentially leading users to leave the site.<br><br>Government Regulation:<br> <a target='_blank' href='https://ecoresponsable.numerique.gouv.fr/publications/referentiel-general-ecoconception/critere/6.6/'>RGESN 6.6 : Does the digital service provide a progressive loading mechanism for graphics and media that require it?</a><br><br> See :<br><a target='_blank' href='https://web.dev/lcp-lazy-loading/'>The performance effects of too much lazy-loading</a><br><a target='_blank' href='https://gtmetrix.com/dont-lazy-load-lcp-image.html'>Lighthouse: Don't lazy load Largest Contentful Paint image</a> </div>",
    "titleData": "At least one largest contentful image was lazy loaded",
    "titleDataSuccess": "No largest contentful image was lazy loaded"
  },
  "nonCompositedAnimations": {
    "title": "Avoid non-composited animations",
    "description": "Animations which are not composited can be janky and increase Cumulative Layout Shift.",
    "correction": "<div class='correction-text'>Non-composited animations, also known as repaint-heavy animations, require frequent recalculations and rendering of elements, which can strain the device's CPU and graphics processor. This leads to increased energy consumption and reduced battery life, particularly on mobile devices. Animations which are not composited can be janky and increase CLS.<br><br> See :<br><a target='_blank' href='https://web.dev/non-composited-animations'>Avoid non-composited animations</a><br><a target='_blank' href='https://gtmetrix.com/avoid-non-composited-animations.html'>Lighthouse: Avoid non-composited animations</a> <br><a target='_blank' href='https://cocolyze.com/en/seo-glossary/non-composited-animations'>Non-composited animations</a> </div>",
    "titleData": "{0} animated elements found"
  },
  "domSize": {
    "title": "Avoids an excessive DOM size",
    "description": "Lighthouse flags pages with DOM trees that: \n Warns when the body element has more than ~800 nodes. \n Errors when the body element has more than ~1,400 nodes.\n Be careful EcoSonar rules are more strict : you should have less than 475 nodes to reach a B Score.",
    "correction": "<div class='correction-text'>The DOM represents the structured representation of a web page's content, structure, and behavior in the browser. An excessively large DOM can negatively impact various aspects of a website's functionality and efficiency. Here's why avoiding an excessive DOM size is important: <br><br>1.Performance: A large DOM can lead to slower rendering times and longer page load times. When the browser has to process and render a complex DOM structure, it requires more computational resources and time, resulting in a suboptimal user experience. <br><br>2. Memory Usage: A large DOM consumes more memory, leading to increased memory usage by the browser. This can impact overall system performance and potentially cause websites to crash or slow down, affecting both user experience and energy efficiency. <br><br>3.Energy Efficiency: Rendering a large DOM requires additional CPU and GPU processing, leading to higher energy consumption. By reducing the DOM size, web pages become more energy-efficient, helping to minimize the environmental impact of browsing. <br><br>4.Mobile Performance: Mobile devices often have limited resources compared to desktop computers. An excessive DOM size can disproportionately impact mobile performance, leading to sluggishness, longer load times, and higher battery drain. <br><br>5.Search Engine Optimization (SEO): Search engines use website performance as a ranking factor. A large DOM can lead to slower load times, which may negatively impact search engine rankings, affecting the visibility and discoverability of a website.<br><br> Best practices n°12 from '115 bonnes pratiques d'écoconception web v4'<br><br> See :<br><a target='_blank' href='https://web.dev/dom-size/'>Avoid an excessive DOM size</a><br><a target='_blank' href='https://developers.google.com/web/fundamentals/performance/rendering/reduce-the-scope-and-complexity-of-style-calculations'>Reduce the scope and complexity of style calculations</a> <br><a target='_blank' href='https://developers.google.com/speed/articles/reflow'>Minimizing browser reflow</a> </div>",
    "titleData": "{0} elements on average"
  },
  "usesLongCacheTtl": {
    "title": "Serve static assets with an efficient cache policy",
    "description": "Lighthouse flags all static resources that aren't cached.",
    "correction": "<div class='correction-text'>Static assets include files like images, stylesheets, scripts, fonts, and other resources that don't change frequently. An efficient cache policy ensures that these assets are stored in the user's browser or on intermediary servers, reducing the need for repeated requests and resource-intensive data transfers.<br>A long cache lifetime can speed up repeat visits to your page.<br><br>Government Regulation:<br> <a target='_blank' href='https://ecoresponsable.numerique.gouv.fr/publications/referentiel-general-ecoconception/critere/6.9/'>RGESN 6.9 : Does the digital service use client-side storage of some resources to avoid unnecessary network exchanges?</a><br><br> See :<br><a target='_blank' href='https://web.dev/uses-long-cache-ttl/'>Serve static assets with an efficient cache policy</a><br><a target='_blank' href='https://gtmetrix.com/serve-static-assets-with-an-efficient-cache-policy.html#:~:text=Serving%20static%20assets%20with%20an,CSS%2C%20JavaScript%2C%20and%20images.'>Lighthouse: Serve static assets with an efficient cache policy</a> <br><a target='_blank' href='https://wp-rocket.me/google-core-web-vitals-wordpress/serve-static-assets-with-an-efficient-cache-policy/'>How to Serve Assets With an Efficient Cache Policy on WordPress</a> </div>",
    "titleData": "{0} resources found"
  },
  "usesResponsiveImages": {
    "title": "Properly size images",
    "description": "The Opportunities section of your Lighthouse report lists all images in your page that aren't appropriately sized, along with the potential savings in kibibytes (KiB).",
    "correction": "<div class='correction-text'>Serve images that are appropriately-sized to save cellular data and improve load time.<br><br>Government Regulation:<br> <a target='_blank' href='https://ecoresponsable.numerique.gouv.fr/publications/referentiel-general-ecoconception/critere/5.2/'>RGESN 5.2 Does the digital service offer image content whose level of compression is appropriate for the content and viewing context?</a><br><br> See :<br><a target='_blank' href='https://web.dev/uses-responsive-images/'>Properly size images</a><br><a target='_blank' href='http://www.ecometer.org/rules/optimize-bitmaps.html'>Optimize bitmaps</a> <br><a target='_blank' href='https://gtmetrix.com/blog/how-to-properly-size-images/'>How to properly size images</a> </div>",
    "titleData": "Potential savings of {0} KiB"
  },
  "offscreenImages": {
    "title": "Defer offscreen images (or lazy-loading)",
    "description": "The Opportunities section of your Lighthouse report lists all offscreen or hidden images in your page along with the potential savings in kibibytes (KiB). Consider lazy-loading these images after all critical resources have finished loading to lower Time to Interactive.",
    "correction": "<div class='correction-text'>Offscreen images are images that are not initially visible to the user when a web page loads. Deferment involves loading these images only when they are about to come into the user's viewport, ensuring a smoother and more resource-efficient browsing experience.<br> Consider lazy-loading offscreen and hidden images after all critical resources have finished loading to lower time to interactive.<br><br>Government Regulation:<br> <a target='_blank' href='https://ecoresponsable.numerique.gouv.fr/publications/referentiel-general-ecoconception/critere/6.6/'>RGESN 6.6 : Le service numérique propose-t-il un mécanisme de chargement progressif pour les éléments graphiques et les médias le nécessitant ?</a><br><br> See :<br><a target='_blank' href='https://web.dev/offscreen-images/'>Defer offscreen images</a><br><a target='_blank' href='https://www.corewebvitals.io/pagespeed/fix-defer-offscreen-images-lighthouse'>Learn how to fix 'defer offscreen images'</a> <br><a target='_blank' href='https://gtmetrix.com/defer-offscreen-images.html'>Lighthouse: Defer offscreen images</a> <br><a target='_blank' href='https://wp-rocket.me/google-core-web-vitals-wordpress/defer-offscreen-images/'>How to Defer Offscreen Images</a> </div>",
    "titleData": "Potential savings of {0} KiB"
  },
  "unusedCssRules": {
    "title": "Reduce unused CSS",
    "description": "The Opportunities section of your Lighthouse report lists all stylesheets with unused CSS with a potential savings of 2 KiB or more. Remove the unused CSS to reduce unnecessary bytes consumed by network activity.",
    "correction": "<div class='correction-text'>Reduce unused rules from stylesheets and defer CSS not used for above-the-fold content to decrease bytes consumed by network activity.<br><br>Government Regulation:<br> <a target='_blank' href='https://ecoresponsable.numerique.gouv.fr/publications/referentiel-general-ecoconception/critere/6.8/'>RGESN 6.8 : Does the digital service avoid triggering the loading of unused assets and content for each feature?</a><br><br> See :<br><a target='_blank' href='https://web.dev/unused-css-rules/'>Remove unused CSS</a><br><a target='_blank' href='https://css-tricks.com/how-do-you-remove-unused-css-from-a-site/'>How Do You Remove Unused CSS From a Site?</a> <br><a target='_blank' href='https://blog.bitsrc.io/4-ways-to-remove-unused-css-647828ca629b'>4 Ways to Remove Unused CSS</a> </div>",
    "titleData": "Potential savings of {0} KiB"
  },
  "unusedJavascript": {
    "title": "Reduce unused JavaScript",
    "description": "Lighthouse flags every JavaScript file with more than 20 kibibytes of unused code.",
    "correction": "<div class='correction-text'>Reduce unused JavaScript and defer loading scripts until they are required to decrease bytes consumed by network activity. <br><br>Government Regulation:<br> <a target='_blank' href='https://ecoresponsable.numerique.gouv.fr/publications/referentiel-general-ecoconception/critere/6.8/'>RGESN 6.8 : Does the digital service avoid triggering the loading of unused assets and content for each feature?</a><br><br> See :<br><a target='_blank' href='https://web.dev/unused-javascript/'>Remove unused JavaScript </a><br><a target='_blank' href='https://www.erwinhofman.com/blog/a-lifehack-for-removing-unused-js-css-or-just-minifying/'>A Lifehack for removing unused JS/CSS.. or just unminify</a> <br><a target='_blank' href='https://mindsize.com/development/how-to-remove-unused-javascript/'>How to Remove Unused JavaScript</a> </div>",
    "titleData": "Potential savings of {0} KiB"
  },
  "usesOptimizedImages": {
    "title": "Efficiently encode images",
    "description": "The Opportunities section of your Lighthouse report lists all unoptimized images, with potential savings in kibibytes (KiB).",
    "correction": "<div class='correction-text'>Smaller image file sizes require less data to be transferred from the server to the user's device. This conserves bandwidth, reduces data consumption, and minimizes the energy consumption associated with data transmission. <br><br>Government Regulation:<br> <a target='_blank' href='https://ecoresponsable.numerique.gouv.fr/publications/referentiel-general-ecoconception/critere/5.2/'>RGESN 5.2 Does the digital service offer image content whose level of compression is appropriate for the content and viewing context?</a><br><br> See :<br><a target='_blank' href='https://web.dev/uses-optimized-images/'>Efficiently encode images</a><br><a target='_blank' href='https://gtmetrix.com/efficiently-encode-images.html'>Lighthouse: Efficiently encode images</a> </div>",
    "titleData": "Potential savings of {0} KiB"
  },
  "modernImageFormats": {
    "title": "Serve images in modern formats",
    "description": "The Opportunities section of your Lighthouse report lists all images in older image formats, showing potential savings gained by serving AVIF versions of those images.",
    "correction": "<div class='correction-text'>Image formats like WebP and AVIF often provide better compression than PNG or JPEG, which means faster downloads and less data consumption. To serve images in modern formats, designers and developers can follow these practices: <br>1.Choose the Right Format: Assess the content and characteristics of each image to determine the most suitable modern image format. <br>2.Implement Browser Detection: Use techniques like feature detection to ensure that modern image formats are only served to browsers that support them. <br>3.Use Conversion Tools: Utilize conversion tools or online services to convert existing images to modern formats. <br>4.Implement Fallbacks: Provide fallback images in older formats for browsers that do not support modern formats. <br>5.Use Content Delivery Networks (CDNs): Many CDNs automatically serve images in optimized formats based on the user's browser and device capabilities. <br><br>Government Regulation:<br><a target='_blank' href='https://ecoresponsable.numerique.gouv.fr/publications/referentiel-general-ecoconception/critere/5.1/'>RGESN 5.1 : Does the digital service use a file format adapted to the content and viewing context of each image content?</a><br><br> See :<br><a target='_blank' href='https://web.dev/uses-webp-images/'>Serve images in modern formats</a><br><a target='_blank' href='https://sortable.com/how-to-guide/how-to-serve-next-gen-image-formats-in-modern-browsers/'>How to Serve Next-Gen Image Formats in Modern Browsers</a> <br><a target='_blank' href='https://www.smashingmagazine.com/2021/09/modern-image-formats-avif-webp/'>Using Modern Image Formats: AVIF And WebP</a></div>",
    "titleData": "Potential savings of {0} KiB"
  },
  "usesTextCompression": {
    "title": "Enable text compression",
    "description": "The Opportunities section of your Lighthouse report lists all text-based resources that aren't compressed.",
    "correction": "<div class='correction-text'>Text-based resources should be served with compression (gzip, deflate or brotli) to minimize total network bytes.<br><br>Government Regulation:<br> <a target='_blank' href='https://ecoresponsable.numerique.gouv.fr/publications/referentiel-general-ecoconception/critere/6.4/'>RGESN 6.4 : Has the digital service implemented compression techniques on all transferred resources under its control?</a><br><br> See :<br><a target='_blank' href='https://web.dev/uses-text-compression/'>Enable text compression</a><br><a target='_blank' href='https://gtmetrix.com/enable-text-compression.html'>Lighthouse: Enable text compression</a> <br><a target='_blank' href='https://blog.hubspot.com/website/gzip-compression'>How to Enable GZIP Compression for Faster Web Pages</a><br><a target='_blank' href='https://docs.wp-rocket.me/article/1403-enable-text-compression'>Enable Text Compression</a></div>",
    "titleData": "Potential savings of {0} KiB"
  },
  "usesHttp2": {
    "title": "Use HTTP/2",
    "description": "Lighthouse lists all resources not served over HTTP/2.",
    "correction": "<div class='correction-text'>HTTP/2 is a modern protocol for transferring data between a web server and a user's browser. It introduces several features that enhance the efficiency of data transfer, resulting in faster loading times, improved user experience, and a more sustainable digital ecosystem. <br>HTTP/2 offers many benefits over HTTP/1.1, including binary headers and multiplexing. <br>HTTP/2 supports multiplexing, allowing multiple requests and responses to be sent and received concurrently over a single connection. This reduces the overhead associated with setting up multiple connections, leading to faster and more efficient data transfer.<br> HTTP/2 uses header compression techniques to reduce the size of request and response headers. This conserves bandwidth and minimizes the energy consumption associated with data transmission. <br><br><br>Regulation:<br> Best practices n°83 from '115 bonnes pratiques d'écoconception web v4'<br><br> See :<br><a target='_blank' href='https://web.dev/uses-http2'>Does not use HTTP/2 for all of its resources</a><br><a target='_blank' href='https://gtmetrix.com/use-http2-for-all-resources.html'>Lighthouse: Use HTTP/2 for all resources</a> <br><a target='_blank' href='https://sitebulb.com/hints/performance/use-http2-for-all-of-its-resources/'>Use HTTP/2 for all of its resources</a></div>",
    "titleData": "{0} requests not served via HTTP/2"
  },
  "efficientAnimatedContent": {
    "title": "Use video formats for animated content",
    "description": "The Opportunities section of your Lighthouse report lists all animated GIFs, along with estimated savings in seconds achieved by converting these GIFs to video.",
    "correction": "<div class='correction-text'>Large GIFs are inefficient for delivering animated content. Consider using MPEG4/WebM videos for animations and PNG/WebP for static images instead of GIF to save network bytes.<br><br> See :<br><a target='_blank' href='https://web.dev/efficient-animated-content/'>Use video formats for animated content</a><br><a target='_blank' href='https://gtmetrix.com/use-video-formats-for-animated-content.html'>Lighthouse: Use video formats for animated content</a></div>",
    "titleData": "Potential savings of {0} KiB"
  },
  "legacyJavascript": {
    "title": "Avoid serving legacy JavaScript to modern browsers",
    "description": "Lighthouse identifies the polyfills and transforms that should not be present if using the module/nomodule pattern.",
    "correction": "<div class='correction-text'>Polyfills and transforms enable legacy browsers to use new JavaScript features. However, many aren't necessary for modern browsers. For your bundled JavaScript, adopt a modern script deployment strategy using module/nomodule feature detection to reduce the amount of code shipped to modern browsers, while retaining support for legacy browsers.<br><br> See :<br><a target='_blank' href='https://gtmetrix.com/avoid-serving-legacy-javascript-to-modern-browsers.html#:~:text=Avoid%20serving%20legacy%20JavaScript%20code,to%20JavaScript%20programming%20and%20functionality.'>Lighthouse: Avoid serving legacy JavaScript to modern browsers</a><br><a target='_blank' href='https://philipwalton.com/articles/deploying-es2015-code-in-production-today/'>Deploying ES2015+ Code in Production Today</a></div>",
    "titleData": "Potential savings of {0} KiB"
  },
  "totalByteWeight": {
    "title": "Avoid enormous network payloads",
    "description": "Lighthouse shows the total size in kibibytes (KiB) of all resources requested by your page. The largest requests are presented first.",
    "correction": "<div class='correction-text'>A network payload refers to the total amount of data that needs to be transferred between a server and a user's device to load a web page or application. Enormous network payloads, which result from large files and excessive data transfer, can lead to slow loading times, increased energy consumption, and a larger carbon footprint.<br><br>Government Regulation:<br> <a target='_blank' href='https://ecoresponsable.numerique.gouv.fr/publications/referentiel-general-ecoconception/critere/6.4/'>RGESN 6.4 : Has the digital service implemented compression techniques on all transferred resources under its control?</a><br><br>  See :<br><a target='_blank' href='https://web.dev/total-byte-weight/'>Avoid enormous network payloads</a><br><a target='_blank' href='https://gtmetrix.com/avoid-enormous-network-payloads.html'>Lighthouse: Avoid enormous network payloads</a></div>",
    "titleData": "Requests size was {0} KiB on average"
  },
  "noDocumentWrite": {
    "title": "Avoids document.write()",
    "description": "Lighthouse flags calls to document.write() that weren't blocked by Chrome.",
    "correction": "<div class='correction-text'>For users on slow connections, external scripts dynamically injected via `document.write()` can delay page load by tens of seconds. <br> document.write() is a JavaScript method that allows developers to dynamically insert content into a web page while it's being parsed. However, using document.write() can lead to rendering issues, slower page loads, and negatively impact both user experience and the environmental impact of web content delivery. <br><br>Government Regulation:<br><a target='_blank' href='https://ecoresponsable.numerique.gouv.fr/publications/referentiel-general-ecoconception/critere/4.1/'>RGESN 4.1 : Is the digital service usable via a low-speed connection?</a><br><br> See :<br><a target='_blank' href='https://web.dev/no-document-write/'>Uses document.write()</a><br><a target='_blank' href='https://developer.chrome.com/blog/removing-document-write/'>Intervening against document.write()</a></div>",
    "titleData": "have at least one document.write()",
    "titleDataSuccess": "have no document.write()"
  },
  "layoutShiftElements": {
    "title": "Avoid large layout shifts",
    "description": "These DOM elements contribute most to the Cumulative Layout Shift of the page.",
    "correction": "<div class='correction-text'>Large layout shifts can create a frustrating experience for your visitors as they make your page appear visually jarring, as page elements appear suddenly, move around, and affect how your visitors interact with the page. Avoiding large layout shifts is essential in creating a smooth and streamlined experience for your visitors. Regarding image dimensions, you should not be resizing image within your browser. Images should have by default the width and height that you want to set up.<br><br>  See :<br><a target='_blank' href='https://gtmetrix.com/avoid-large-layout-shifts.html'>Lighthouse: Avoid large layout shifts</a><br><a target='_blank' href='https://web.dev/optimize-cls/'>Optimize Cumulative Layout Shift</a></div>",
    "titleData": "{0} elements found"
  },
  "usesPassiveEventListeners": {
    "title": "Does not use passive listeners to improve scrolling performance",
    "description": "Consider marking your touch and wheel event listeners as `passive` to improve your page's scroll performance.",
    "correction": "<div class='correction-text'> Passive event listeners are a technique used to make event handling more efficient, particularly for scrolling and touch interactions. By using passive event listeners, web developers can reduce the amount of work done by the browser during scroll interactions, leading to smoother performance. <br> Consider marking your touch and wheel event listeners as `passive` to improve your page's scroll performance.<br><br>  See :<br><a target='_blank' href='https://web.dev/uses-passive-event-listeners/'>Use passive listeners to improve scrolling performance</a><br><a target='_blank' href='https://developer.chrome.com/blog/passive-event-listeners/'>Improving scroll performance with passive event listeners</a></div>",
    "titleData": "at least one page does not have passive listeners",
    "titleDataSuccess": "have passive listeners"
  },
  "duplicatedJavascript": {
    "title": "Remove duplicate modules in JavaScript bundles",
    "description": "If the wasted bandwidth exceeds 1 KB, this audit triggers.",
    "correction": "<div class='correction-text'>Remove large, duplicate JavaScript modules from bundles to reduce unnecessary bytes consumed by network activity. <br>To avoid serving legacy JavaScript to modern browsers, developers can follow these practices: <br>- Feature Detection: Use feature detection techniques to determine the capabilities of the user's browser before serving specific JavaScript code. <br>- Progressive Enhancement: Build your website's functionality using a progressive enhancement approach, where basic features are available to all users, while more advanced features are served to capable browsers. <br>- Use Modern APIs: Utilize modern JavaScript APIs and features that are well-supported by modern browsers. <br>- Browser Support Matrix: Maintain a browser support matrix that outlines the supported features and JavaScript capabilities of different browser versions.<br><br>Government Regulation:<br><br><a target='_blank' href='https://ecoresponsable.numerique.gouv.fr/publications/referentiel-general-ecoconception/critere/6.8/'>RGESN 6.8 : Does the digital service avoid triggering the loading of unused assets and content for each feature?</a><br><br> See :<br><a target='_blank' href='https://gtmetrix.com/remove-duplicate-modules-in-javascript-bundles.html'>Lighthouse: Remove duplicate modules in JavaScript bundles</a><br><a target='_blank' href='https://www.jakepusateri.com/blog/remove-webpack-duplicates/'>Reduce webpack bundle size by eliminating duplicated</a></div>",
    "titleData": "Potential savings of {0} KiB"
  },
  "unminifiedJavascript": {
    "title": "Minify JavaScript",
    "description": "The Opportunities section of your Lighthouse report lists all unminified JavaScript files, along with the potential savings in kibibytes (KiB) when these files are minified.",
    "correction": "<div class='correction-text'>Minification is the process of removing unnecessary characters (such as white spaces, comments, and line breaks) from JS code without altering its functionality. Minifying JavaScript files can reduce payload sizes and script parse time.<br><br>Best practices n°77 from '115 bonnes pratiques d'écoconception web v4' <br><br> See :<br><a target='_blank' href='https://web.dev/unminified-javascript/'>Minifiy Javascript</a><br><a target='_blank' href='http://www.ecometer.org/rules/javascript-minification.html'>Minify Javascript files</a><br><a target='_blank' href='https://www.imperva.com/learn/performance/minification/'>Minification</a></div>",
    "titleData": "Potential savings of {0} KiB"
  }
}